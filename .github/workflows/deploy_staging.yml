# yaml-language-server: $schema=https://raw.githubusercontent.com/SchemaStore/schemastore/master/src/schemas/json/github-workflow.json
---
name: Deploy API to staging

on:
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  id-token: write
  contents: read
  pull-requests: write
  deployments: write
  repository-projects: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

jobs:
  deploy_staging:
    name: Deploy API to staging
    if: ${{ ! contains(github.event.*.labels.*.name, 'no deploy') }}

    runs-on: ubuntu-latest

    environment:
      name: staging-${{ github.event.pull_request.number }}
      url: https://anteater-api-staging-${{ github.event.pull_request.number }}.icssc.workers.dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node-and-pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Deploy API to staging
        working-directory: ./apps/api
        run: pnpm run deploy --name=anteater-api-staging-${{ github.event.pull_request.number }}
